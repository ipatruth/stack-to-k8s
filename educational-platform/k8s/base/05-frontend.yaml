# ====================================apiVersion: apps/v1

# Frontend Deployment for Educational Platformkind: Deployment

# Angular application with Nginxmetadata:

# ====================================  name: frontend

apiVersion: apps/v1  namespace: educational-platform

kind: Deployment  labels:

metadata:    app: frontend

  name: educational-frontend    app.kubernetes.io/name: educational-platform

  namespace: educational    app.kubernetes.io/component: frontend

  labels:    app.kubernetes.io/version: "1.0.0"

    app: educational-platformspec:

    component: frontend  replicas: 3

spec:  strategy:

  replicas: 2    type: RollingUpdate

  selector:    rollingUpdate:

    matchLabels:      maxSurge: 1

      app: educational-platform      maxUnavailable: 1

      component: frontend  selector:

  template:    matchLabels:

    metadata:      app: frontend

      labels:  template:

        app: educational-platform    metadata:

        component: frontend      labels:

    spec:        app: frontend

      containers:        app.kubernetes.io/name: educational-platform

      - name: frontend        app.kubernetes.io/component: frontend

        image: temitayocharles/educational-frontend:latest    spec:

        ports:      containers:

        - containerPort: 80      - name: frontend

          name: http        image: educational-platform/frontend:latest

        env:        imagePullPolicy: Always

        - name: API_URL        ports:

          value: "http://educational-backend:8080"        - containerPort: 80

        resources:          name: http

          requests:          protocol: TCP

            memory: "128Mi"        env:

            cpu: "100m"        - name: API_URL

          limits:          value: "http://backend-service:8080"

            memory: "256Mi"        - name: WS_URL

            cpu: "200m"          value: "ws://backend-service:8080"

        livenessProbe:        - name: PRODUCTION

          httpGet:          valueFrom:

            path: /            configMapKeyRef:

            port: 80              name: app-config

          initialDelaySeconds: 15              key: PRODUCTION

          periodSeconds: 10        - name: ENABLE_NOTIFICATIONS

          timeoutSeconds: 3          valueFrom:

        readinessProbe:            configMapKeyRef:

          httpGet:              name: app-config

            path: /              key: ENABLE_NOTIFICATIONS

            port: 80        - name: ENABLE_CHAT

          initialDelaySeconds: 5          valueFrom:

          periodSeconds: 5            configMapKeyRef:

          timeoutSeconds: 2              name: app-config

              key: ENABLE_CHAT

---        - name: ENABLE_VIDEO_CALL

apiVersion: v1          valueFrom:

kind: Service            configMapKeyRef:

metadata:              name: app-config

  name: educational-frontend              key: ENABLE_VIDEO_CALL

  namespace: educational        - name: ENABLE_ANALYTICS

  labels:          valueFrom:

    app: educational-platform            configMapKeyRef:

    component: frontend              name: app-config

spec:              key: ENABLE_ANALYTICS

  type: LoadBalancer        - name: ENABLE_DARK_MODE

  selector:          valueFrom:

    app: educational-platform            configMapKeyRef:

    component: frontend              name: app-config

  ports:              key: ENABLE_DARK_MODE

  - name: http        

    port: 80        resources:

    targetPort: 80          requests:

    protocol: TCP            memory: "64Mi"

            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - SETGID
            - SETUID
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - frontend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: educational-platform
  labels:
    app: frontend
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: frontend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: educational-platform
  labels:
    app: frontend
    app.kubernetes.io/name: educational-platform
    app.kubernetes.io/component: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
