# ====================================
# Backend Deployment for Social Media Platform
# Ruby Sinatra API with PostgreSQL, Redis, and OpenAI
# ====================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: social-backend
  namespace: social-media
  labels:
    app: social-media-platform
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: social-media-platform
      component: backend
  template:
    metadata:
      labels:
        app: social-media-platform
        component: backend
    spec:
      containers:
      - name: backend
        image: temitayocharles/social-backend:latest
        ports:
        - containerPort: 3005
          name: http
        env:
        # Application settings
        - name: RACK_ENV
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: RACK_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: PORT
        
        # Database connection
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: DATABASE_URL
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: DATABASE_PASSWORD
        
        # Redis connection
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: REDIS_PASSWORD
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: REDIS_DB
        
        # OpenAI integration
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: OPENAI_API_KEY
        
        # Session and JWT
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: SESSION_SECRET
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: social-secret
              key: JWT_SECRET
        
        # WebSocket
        - name: WS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: social-config
              key: WS_ENABLED
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: social-backend
  namespace: social-media
  labels:
    app: social-media-platform
    component: backend
spec:
  type: ClusterIP
  selector:
    app: social-media-platform
    component: backend
  ports:
  - name: http
    port: 3005
    targetPort: 3005
    protocol: TCP
